<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
			    http://maven.apache.org/maven-v4_0_0.xsd">
	<!-- ================================= NOTE: ================================= 
		m2e ( http://download.eclipse.org/technology/m2e/releases ) supported, but 
		1) Proper Maven installation needs to be performed: http://maven.apache.org/download.html#Installation
		1) Packaging should only occur via Maven command-line "mvn clean package"
		========================================================================== -->

	<modelVersion>4.0.0</modelVersion>

	<groupId>org.ugate</groupId>
	<artifactId>ugate</artifactId>
	<packaging>jar</packaging>
	<version>1.0</version>
	<name>UGate</name>
	<url>http://${project.artifactId}.org</url>
	<description>
		${project.name} interface that facilitates access and maintainability of remote micro-controller node(s) used for security surveillance.
	</description>
	<organization>
		<name>${project.name}</name>
		<url>${project.url}</url>
	</organization>
	<licenses>
		<license>
			<name>${ugate.license.name}</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A ${project.organization.name} business-friendly OSS license</comments>
		</license>
	</licenses>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.build.timestamp.format>yyyyMMdd-HHmm</maven.build.timestamp.format>
		<ugate.log.level>INFO</ugate.log.level>
		<!-- NOTE: Java 8 will have JavaFX in class path by default and will not 
			require system dependencies -->
		<ugate.javafx.version>2.2</ugate.javafx.version>
		<!-- RXTX will be copied to the appropriate bundled JRE directories -->
		<ugate.rxtx.version>2.1.7</ugate.rxtx.version>
		<ugate.xbee-api.version>0.9</ugate.xbee-api.version>
		<ugate.openjpa.version>2.2.1</ugate.openjpa.version>
		<ugate.validation.version>1.0.0.GA</ugate.validation.version>
		<ugate.bval.version>0.5</ugate.bval.version>
		<ugate.mail.version>1.4.5</ugate.mail.version>
		<ugate.slf4j.version>1.6.6</ugate.slf4j.version>
		<ugate.logback.version>1.0.6</ugate.logback.version>
		<ugate.thymeleaf.version>2.0.14</ugate.thymeleaf.version>
		<ugate.jetty.version>9.0.1.v20130408</ugate.jetty.version>
		<ugate.servlet.version>3.0.1</ugate.servlet.version>
		<ugate.jta.version>1.1</ugate.jta.version>
		<ugate.atomikos.version>3.8.0</ugate.atomikos.version>
		<ugate.spring.version>3.2.0.RELEASE</ugate.spring.version>
		<ugate.cglib.version>2.2.2</ugate.cglib.version>
		<ugate.bouncycastle.version>1.47</ugate.bouncycastle.version>
		<ugate.junit.version>4.11</ugate.junit.version>
		<ugate.ant.version>1.8.3</ugate.ant.version>
		<ugate.wix.version>3.7.RC</ugate.wix.version>
		<ugate.plugin.compiler.version>3.0</ugate.plugin.compiler.version>
		<ugate.plugin.exec.version>1.2.1</ugate.plugin.exec.version>
		<ugate.plugin.jar.version>2.4</ugate.plugin.jar.version>
		<ugate.plugin.shade.version>2.0</ugate.plugin.shade.version>
		<ugate.plugin.dependency.version>2.7</ugate.plugin.dependency.version>
		<ugate.plugin.antrun.version>1.7</ugate.plugin.antrun.version>
		<ugate.plugin.resources.version>2.6</ugate.plugin.resources.version>
		<ugate.plugin.surefire.version>2.13</ugate.plugin.surefire.version>
		<ugate.db.tx.timeout>60000</ugate.db.tx.timeout>
		<ugate.db.sql.timeout>5000</ugate.db.sql.timeout>
		<!-- see http://www.h2database.com/html/features.html -->
		<ugate.db.version>1.3.168</ugate.db.version>
		<!-- <ugate.db.version>5.1.19</ugate.db.version> -->
		<ugate.db.connection.url>jdbc:h2:~/${project.artifactId}/${project.artifactId};AUTO_SERVER=TRUE;FILE_LOCK=SOCKET;TRACE_LEVEL_FILE=0;TRACE_LEVEL_SYSTEM_OUT=0</ugate.db.connection.url>
		<!-- <ugate.db.connection.url>jdbc:mysql://localhost:3306/test</ugate.db.connection.url> -->
		<ugate.db.test.query>SELECT 1 and SELECT 1 FROM DUAL</ugate.db.test.query>
		<!-- <ugate.db.test.query>SELECT 1</ugate.db.test.query> -->
		<ugate.db.driver.name>org.h2.Driver</ugate.db.driver.name>
		<!-- <ugate.db.driver.name>com.mysql.jdbc.Driver</ugate.db.driver.name> -->
		<ugate.db.jta.ds.xa>org.h2.jdbcx.JdbcDataSource</ugate.db.jta.ds.xa>
		<!-- <ugate.db.jta.ds.xa>com.mysql.jdbc.jdbc2.optional.MysqlXADataSource</ugate.db.jta.ds.xa> -->
		<ugate.db.username>sa</ugate.db.username>
		<ugate.db.password>sa</ugate.db.password>
		<!-- http://www.h2database.com/javadoc/org/h2/jdbcx/JdbcDataSource.html -->
		<ugate.db.jta.ds>${project.artifactId}DS</ugate.db.jta.ds>
		<ugate.db.jta.ds.name>jdbc/${ugate.db.jta.ds}</ugate.db.jta.ds.name>
		<ugate.db.jta.ds.name.unmanaged>jdbc/Unmannaged${ugate.db.jta.ds}</ugate.db.jta.ds.name.unmanaged>
		<ugate.db.package>${project.groupId}.service</ugate.db.package>
		<ugate.dao.package>${ugate.db.package}.dao</ugate.dao.package>
		<ugate.web.package>${ugate.db.package}.web</ugate.web.package>
		<ugate.db.entity.package>${ugate.db.package}.entity</ugate.db.entity.package>
		<ugate.db.jpa.package>${ugate.db.entity.package}.jpa</ugate.db.jpa.package>
		<ugate.db.listeners>${ugate.db.entity.package}.UGateJdbcListener</ugate.db.listeners>
		<ugate.main>${project.groupId}.gui.UGateGUI</ugate.main>
		<ugate.preloader>${project.groupId}.gui.components.StartupPreloader</ugate.preloader>
		<ugate.repo>${basedir}/libs</ugate.repo>
		<ugate.license.name>The Apache Software License, Version 2.0</ugate.license.name>
		<!-- TODO : Once the JavaFX Ant tool is in the central Maven repo the path 
			can be removed (java.home should point to the JDK root directory) -->
		<ugate.javafx.ant.jar>${java.home}/../lib/ant-javafx.jar</ugate.javafx.ant.jar>
		<ugate.deploy.dir>${project.build.directory}/dist</ugate.deploy.dir>
		<ugate.deploy.jar.dir>${ugate.deploy.dir}/jfx-jar</ugate.deploy.jar.dir>
		<ugate.deploy.native.dir>${ugate.deploy.dir}/jfx-native</ugate.deploy.native.dir>
		<ugate.deploy.package.dir>${ugate.deploy.dir}/package</ugate.deploy.package.dir>
		<ugate.deploy.jre.dir>${ugate.deploy.package.dir}/runtime/jre</ugate.deploy.jre.dir>
		<jfxBuildJavaHome>${java.home}</jfxBuildJavaHome>
		<jfxBuildVerbose>true</jfxBuildVerbose>
		<jfxBuildTargets>jfx-copy-natives,jfx-jar,jfx-deploy</jfxBuildTargets>
	</properties>

	<repositories>
		<!-- Add a local repository to add artifacts that do not reside in the 
			public repository -->
		<repository>
			<id>project-repo</id>
			<url>file://${ugate.repo}</url>
		</repository>
	</repositories>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>**/*build.xml</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*build.xml</include>
				</includes>
				<targetPath>${ugate.deploy.dir}</targetPath>
			</resource>
			<!-- Make sure that any other resources like CSS, images, sounds, etc. 
				are included -->
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
				<filtering>false</filtering>
			</resource>
		</resources>
		<!-- http://iconverticons.com/online/ -->
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>**/*.dll</exclude>
					<exclude>**/*.jnilib</exclude>
					<exclude>**/*.so</exclude>
					<exclude>**/*.ico</exclude>
					<exclude>**/*.icns</exclude>
					<exclude>**/*.hqx</exclude>
					<exclude>**/*.png</exclude>
				</excludes>
			</testResource>
			<testResource>
				<directory>src/test/resources</directory>
				<includes>
					<include>**/*.dll</include>
					<include>**/*.jnilib</include>
					<include>**/*.so</include>
					<include>**/*.ico</include>
					<include>**/*.icns</include>
					<include>**/*.hqx</include>
					<include>**/*.png</include>
				</includes>
			</testResource>
		</testResources>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<!-- m2e can ignore setting the native build tool path (mvn package on command-line only) -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>exec-maven-plugin</artifactId>
										<versionRange>[${ugate.plugin.exec.version},)</versionRange>
										<goals>
											<goal>exec</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<!-- m2e can ignore unpacking/copying dependencies (mvn package on command-line only) -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[${ugate.plugin.dependency.version},)</versionRange>
										<goals>
											<goal>unpack</goal>
											<goal>copy</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<!-- m2e needs to execute OpenJPA enhancement -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>exec-maven-plugin</artifactId>
										<versionRange>[${ugate.plugin.exec.version},)</versionRange>
										<goals>
											<goal>java</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<!-- m2e can ignore JavaFX packaging (mvn package on command-line only) -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[${ugate.plugin.antrun.version},)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${ugate.plugin.compiler.version}</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>
			<!-- OpenJPA enhanement (m2e support see lifecycle-mapping [http://openjpa.apache.org/enhancingwithmaven.html 
				doesn't work, nor does openjpa-maven-plugin]) -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>${ugate.plugin.exec.version}</version>
				<executions>
					<!-- JPA build time enhancements -->
					<execution>
						<id>enhance</id>
						<phase>process-classes</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<includeProjectDependencies>true</includeProjectDependencies>
							<mainClass>org.apache.openjpa.enhance.PCEnhancer</mainClass>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Add the class path to the JARs manifest -->
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${ugate.plugin.jar.version}</version>
				<configuration>
					<archive>
						<index>true</index>
						<manifestEntries>
							<Main-Class>${ugate.main}</Main-Class>
							<Class-Path>.</Class-Path>
							<Product-Company>${project.organization.name}</Product-Company>
							<Product-Name>${project.name}</Product-Name>
							<Product-Version>${project.version}</Product-Version>
							<Build-Timestamp>${maven.build.timestamp}</Build-Timestamp>
							<Build-OS>${os.name}</Build-OS>
							<Build-By>${user.name}</Build-By>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<!-- build JAR with filtered dependencies -->
			<plugin>
				<artifactId>maven-shade-plugin</artifactId>
				<version>${ugate.plugin.shade.version}</version>
				<executions>
					<execution>
						<id>uber-jar</id>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/spring.handlers</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/spring.schemas</resource>
								</transformer>
							</transformers>
							<dependencyReducedPomLocation>${project.build.directory}/dependency-reduced-pom.xml</dependencyReducedPomLocation>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${ugate.plugin.dependency.version}</version>
				<executions>
					<execution>
						<id>unpack-shade-for-fx</id>
						<phase>package</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<!-- Unpack shaded JAR to ${project.build.directory}/dependency to be included 
									in final JFX JAR (TODO : JDK 7u11 will allow JAR updates https://blogs.oracle.com/talkingjavadeployment/entry/packaging_improvements_in_jdk_7) -->
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>${project.artifactId}</artifactId>
									<version>${project.version}</version>
								</artifactItem>
								<!-- JavaFX native packaging tools need to reside under the same directory 
									that the build id running under -->
<!-- 								<artifactItem> -->
<!-- 									<groupId>org.wixtoolset</groupId> -->
<!-- 									<artifactId>wix-toolset</artifactId> -->
<!-- 									<outputDirectory>${ugate.deploy.dir}</outputDirectory> -->
<!-- 								</artifactItem> -->
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${ugate.plugin.resources.version}</version>
				<configuration>
					<escapeString>^</escapeString>
				</configuration>
			</plugin>
			<!-- Configure unit tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${ugate.plugin.surefire.version}</version>
				<configuration>
					<includes>
						<include>**/*Test.java</include>
						<include>**/*TestSuite.java</include>
					</includes>
				</configuration>
				<executions>
					<!-- JavaFX native installer build done via test as a workaround for lack 
						of feature to pass in path to the native tool in JavaFX packager (or changing 
						user.dir for maven-antrun-plugin) -->
					<execution>
						<id>jfx-ant</id>
						<phase>package</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<includes>
								<include>**/*Build.java</include>
							</includes>
							<workingDirectory>${ugate.deploy.dir}</workingDirectory>
							<systemPropertyVariables>
								<buildFile>jfx-build.xml</buildFile>
								<buildClassPath>${maven.plugin.classpath}</buildClassPath>
								<buildTargets>${jfxBuildTargets}</buildTargets>
								<buildVerbose>${jfxBuildVerbose}</buildVerbose>
							</systemPropertyVariables>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>com.oracle.javafx</groupId>
			<artifactId>javafx</artifactId>
			<version>${ugate.javafx.version}</version>
			<scope>system</scope>
			<systemPath>${java.home}/lib/jfxrt.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>com.rapplogic</groupId>
			<artifactId>xbee-api</artifactId>
			<version>${ugate.xbee-api.version}</version>
			<exclusions>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.rxtx</groupId>
			<artifactId>rxtx</artifactId>
			<version>${ugate.rxtx.version}</version>
<!-- 			<scope>provided</scope> -->
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>${ugate.mail.version}</version>
		</dependency>
		<!-- Database -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${ugate.db.version}</version>
		</dependency>
		<!-- JTA -->
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
			<version>${ugate.jta.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.atomikos</groupId>
			<artifactId>atomikos-util</artifactId>
			<version>${ugate.atomikos.version}</version>
		</dependency>
		<dependency>
			<groupId>com.atomikos</groupId>
			<artifactId>transactions</artifactId>
			<version>${ugate.atomikos.version}</version>
		</dependency>
		<dependency>
			<groupId>com.atomikos</groupId>
			<artifactId>transactions-api</artifactId>
			<version>${ugate.atomikos.version}</version>
		</dependency>
		<dependency>
			<groupId>com.atomikos</groupId>
			<artifactId>transactions-jdbc</artifactId>
			<version>${ugate.atomikos.version}</version>
		</dependency>
		<dependency>
			<groupId>com.atomikos</groupId>
			<artifactId>transactions-jta</artifactId>
			<version>${ugate.atomikos.version}</version>
		</dependency>
<!-- 		<dependency> -->
<!-- 			<groupId>com.atomikos</groupId> -->
<!-- 			<artifactId>transactions-jms</artifactId> -->
<!-- 			<version>${ugate.atomikos.version}</version> -->
<!-- 		</dependency> -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${ugate.spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${ugate.spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${ugate.spring.version}</version>
		</dependency>
		<!-- cglib is required for some spring inections (may be replaced by java 
			assist in spring 3.2) -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>${ugate.cglib.version}</version>
		</dependency>
		<!-- JPA -->
		<dependency>
			<groupId>org.apache.openjpa</groupId>
			<artifactId>openjpa</artifactId>
			<version>${ugate.openjpa.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
				<exclusion>
					<groupId>asm</groupId>
					<artifactId>asm</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Bean Validation -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>${ugate.validation.version}</version>
		</dependency>
<!-- 		<dependency> -->
<!-- 			<groupId>org.apache.geronimo.specs</groupId> -->
<!-- 			<artifactId>geronimo-validation_1.0_spec</artifactId> -->
<!-- 			<version>${ugate.validation.version}</version> -->
<!-- 		</dependency> -->
		<dependency>
			<groupId>org.apache.bval</groupId>
			<artifactId>bval-jsr303</artifactId>
			<version>${ugate.bval.version}</version>
		</dependency>
		<!-- Web Server -->
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf</artifactId>
			<version>${ugate.thymeleaf.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${ugate.servlet.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
			<version>${ugate.jetty.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty.websocket</groupId>
			<artifactId>websocket-server</artifactId>
			<version>${ugate.jetty.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-util-ajax</artifactId>
			<version>${ugate.jetty.version}</version>
		</dependency>
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk15on</artifactId>
			<version>${ugate.bouncycastle.version}</version>
		</dependency>
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcpkix-jdk15on</artifactId>
			<version>${ugate.bouncycastle.version}</version>
		</dependency>
		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${ugate.slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>${ugate.slf4j.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${ugate.logback.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${ugate.junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.ant</groupId>
			<artifactId>ant</artifactId>
			<version>${ugate.ant.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.oracle.javafx</groupId>
			<artifactId>ant-javafx</artifactId>
			<version>${ugate.javafx.version}</version>
			<scope>system</scope>
			<systemPath>${ugate.javafx.ant.jar}</systemPath>
		</dependency>
	</dependencies>
	<!-- Native packaging profiles RXTX dependencies will be copied to the appropriate 
		JRE directories in the bundled JRE: Windows ( http://rxtx.qbang.org/wiki/index.php/Installation_for_Windows 
		), Mac ( http://rxtx.qbang.org/wiki/index.php/Installation_on_MacOS_X ), 
		Linux ( http://rxtx.qbang.org/wiki/index.php/Installation_on_Linux ) -->
	<profiles>
		<profile>
			<id>win-build</id>
			<activation>
				<os>
					<family>windows</family>
				</os>
			</activation>
<!-- 			<build> -->
<!-- 				<plugins> -->
<!-- 					<plugin> -->
<!-- 						<artifactId>maven-dependency-plugin</artifactId> -->
<!-- 						<version>${ugate.plugin.dependency.version}</version> -->
<!-- 						<executions> -->
<!-- 							<execution> -->
<!-- 								<id>unpack-wix-for-fx</id> -->
<!-- 								<phase>prepare-package</phase> -->
<!-- 								<goals> -->
<!-- 									<goal>unpack</goal> -->
<!-- 								</goals> -->
<!-- 								<configuration> -->
<!-- 									<artifactItems> -->
<!-- 										JavaFX native packaging tools need to reside under the same directory -->
<!-- 											that the build id running under --> 
<!-- 										<artifactItem> -->
<!-- 											<groupId>org.wixtoolset</groupId> -->
<!-- 											<artifactId>wix-toolset</artifactId> -->
<!-- 											<outputDirectory>${ugate.deploy.dir}</outputDirectory> -->
<!-- 										</artifactItem> -->
<!-- 									</artifactItems> -->
<!-- 								</configuration> -->
<!-- 							</execution> -->
<!-- 						</executions> -->
<!-- 					</plugin> -->
<!-- 				</plugins> -->
<!-- 			</build> -->
			<dependencies>
				<dependency>
					<groupId>org.wixtoolset</groupId>
					<artifactId>wix-toolset</artifactId>
					<version>${ugate.wix.version}</version>
					<scope>provided</scope>
				</dependency>
			</dependencies>
			<properties>
				<os.family>windows</os.family>
			</properties>
		</profile>
		<profile>
			<id>mac-build</id>
			<activation>
				<os>
					<family>mac</family> 
				</os>
			</activation>
			<properties>
				<os.family>mac</os.family>
			</properties>
		</profile>
		<profile>
			<id>linux-build</id>
			<activation>
				<os>
					<family>linux</family>
				</os>
			</activation>
			<properties>
				<os.family>linux</os.family>
			</properties>
		</profile>
	</profiles>
</project>
