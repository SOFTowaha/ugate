# Maven filtered properties from src/main/config/filter DO NOT EDIT IN ANY OTHER DIRECTORY OR IT WILL BE OVERWRITTEN!
main.class=org.ugate.gui.UGateGUI
rxtx.version=2.1.7
rxtx.file.name=rxtx-2.1.7.zip
app.id=ugate
app.version=1.0
app.desc=UGate Console interface that facilitates access and maintainability of remote micro-controller node(s) used for security surveillance.
app.title=UGate Console v1.0
app.title.user=Welcome %1$s
app.title.action.required=Action Required
app.title.error=Errors occurred while initializing the application (see logs for more details)
app.footer.updates.inidcator=Live Updates Indicator
app.service.com.restart.required=COM port communication libraries (RXTX) have been successfully installed, but requires the application to be restarted. Please close and reopen the application.
app.service.init.error=Unable to initialize service resources (see logs for more details)
app.gatekeeper.init.error=Unable to initialize the gate keeper (see logs for more details)
app.connection.desc=Remote connection to the local XBee, Web Server, and Email. Red/Yellow/Green status lights represent the XBee, Web Server, and Email (respectively). Red indicates a disconnected state. Yellow indicates that a connection attempt is in progress. Green indicates a connected state.
app.controls.desc=Control panel for all host/remote peripheral devices.
app.capture.desc=Display panel for captured image/video received by remote peripheral devices.
app.graph.desc=Heuristic graph of peripheral device activity.
app.web.tool.desc=Web user interface setup that will control how the application will function when run from a web browser.
app.dialog.setup=In order to complete the installation setup please provide credentials for application and web access.
app.dialog.setup.error=Unable to generate credentials for %1$s
app.dialog.setup.error.password.mismatch=Passwords do not match
app.dialog.auth=Please provide your login credentials to access the application.
app.dialog.auth.error=Authentication failed for %1$s
app.dialog.username=Username/Email
app.dialog.password=Password
app.dialog.password.verify=Retype Password To Verify
app.dialog.required=%1$s is/are required
app.dialog.defaultuser=Auto Login With The Current User?
app.service.startup.desc=Automatically start service when the application loads?
app.service.host.startup.desc=Automatically start service when the XBee connected to the host machine successfully connects?
app.service.startup.auto=Auto
app.service.startup.manual=Manual
loading=Loading...
login=Login
logout=Logout
select=Select
today=Today
reload=Reload
open=Open
close=Close
all=All
all.off=All Off
on=On
off=Off
update=Update
submit=Submit
error=Error
invalid=The following values are invalid: %1$s
feet=Feet
inches=Inches
meters=Meters
camAnglePan=Camera Pan Angle
camAnglePan.desc=Camera Pan: Current camera pan angle (in degrees)
camAngleTilt=Camera Tilt Angle
camAngleTilt.desc=Camera Tilt: Current camera tilt angle (in degrees)
camResolution=Image Resolution
sending=Sending...
sonar=Sonar
sonar.pir.pos=Sonar/PIR Positioning
pir=PIR (Passive Infra-Red)
mw=Microwave
mw.pos=Microwave Positioning
laser=Laser
alarm.thres=Alarm Thresholds
alarm.settings=General Settings
alarm.positioning=Positioning
alarm.notify=Alarm Notifications
cam=Camera
cam.trip.angle.priority.desc=%1$s: The priority that will be given when multiple alarms are simultaneously triggered. For example, if sensor A has a priority of 1 and sensor B has a priority of 2 and both alarms are triggered, the cam \
	pan/tilt angle for sensor A will be used to position the camera before an picture is taken (after the pic is taken the camera will return to the previous pan/tilt position)
cam.pos=Camera Positioning
camResolution=Camera Resolution
camResolution.desc=Sets the camera resolution of the images taken when an alarm is triggered
camResolution.vga=VGA
camResolution.qvga=QVGA
camSonarTripAnglePriority=Sonar Alarm Cam Position Priority
camPirTripAnglePriority=PIR Alarm Cam Position Priority
camMwTripAnglePriority=Microwave Alarm Cam Position Priority
camLaserTripAnglePriority=Laser Alarm Cam Position Priority
camSonarTripAnglePan=Sonar Alarm Cam Pan Angle
camSonarTripAngleTilt=Sonar Alarm Cam Tilt Angle
camSonarTripAnglePan.desc=Sonar Pan: Current trip alarm sensor pan angle in degrees. An angle of 181 indicates the camera will maintain it's position when the alarm is triggered.
camSonarTripAngleTilt.desc=Sonar Tilt: Current trip alarm sensor tilt angle in degrees. An angle of 181 indicates the camera will maintain it's position when the alarm is triggered.
camPirTripAnglePan=PIR Alarm Cam Pan Angle
camPirTripAngleTilt=PIR Alarm Cam Tilt Angle
camPirTripAnglePan.desc=PIR Pan: Current trip alarm sensor pan angle in degrees. An angle of 181 indicates the camera will maintain it's position when the alarm is triggered.
camPirTripAngleTilt.desc=PIR Tilt: Current trip alarm sensor tilt angle in degrees. An angle of 181 indicates the camera will maintain it's position when the alarm is triggered.
camMwTripAnglePan=Microwave Alarm Cam Pan Angle
camMwTripAngleTilt=Microwave Alarm Cam Tilt Angle
camMwTripAnglePan.desc=Microwave Pan: Current trip alarm sensor pan angle in degrees. An angle of 181 indicates the camera will maintain it's position when the alarm is triggered.
camMwTripAngleTilt.desc=Microwave Tilt: Current trip alarm sensor pan angle in degrees. An angle of 181 indicates the camera will maintain it's position when the alarm is triggered.
camLaserTripAnglePan=Laser Alarm Cam Pan Angle
camLaserTripAngleTilt=Laser Alarm Cam Tilt Angle
camLaserTripAnglePan.desc=Laser Pan: Current trip alarm sensor pan angle in degrees. An angle of 181 indicates the camera will maintain it's position when the alarm is triggered.
camLaserTripAngleTilt.desc=Laser Tilt: Current trip alarm sensor pan angle in degrees. An angle of 181 indicates the camera will maintain it's position when the alarm is triggered.
sonarPirAnglePan=Sonar/PIR Pan Angle
sonarPirAngleTilt=Sonar/PIR Tilt Angle
sonarPirAnglePan.desc=Sonar/PIR Pan: Current trip alarm sensor pan angle (in degrees)
sonarPirAngleTilt.desc=Sonar/PIR Tilt: Current trip alarm sensor tilt angle (in degrees)
mwAnglePan=Microwave Pan Angle
mwAnglePan.desc=Microwave Pan: Current trip alarm sensor pan angle (in degrees)
universal.remote=Universal Remote
universalRemoteAccessOn=Universal Remote Access
universalRemoteAccessOn.desc=Toggle access to remote XBee via a universal remote control.
sensors.trip.multi=Multi-Alarm Trip State
multiAlarmTripState=Multi-Alarm Trip State Binary Value
multiAlarmTripState.desc=Multi-Alarm Trip State. When all of the alarm icons are GREEN any sensor tripped will cause an alarm. Otherwise, each alarm icon that is BLUE will all have to be tripped simultaneously in order to signal an alarm (RED indicates the alarm is off).
mailAlertOn=Email Notification
mailAlertOn.desc=Toggle sending email notifications for images taken (for alarm trip only- images taken manually via GUI will not be sent)
mail.alarm.notify.emails=Authorized Recipient Email(s)
mail.alarm.notify.emails.desc=Email recipients that will receive an email notification with an image attachment when the alarm is triggered. The same email users are used to determine if an incoming email is authorized to execute a command. 
mail.alarm.notify.emails.remove=Remove selected authorized recipient email(s)
mail.alarm.notify.emails.add=Add authorized recipient email
mail.alarm.notify.emails.add.desc=Authorized recipient email to add
mail.alarm.notify.emails.add.failed=Failed to add recipient! See log for more details
mail.alarm.notify.emails.remove.failed=Failed to remove recipient(s)! See log for more details
deviceSoundsOn=Sound Notification
deviceSoundsOn.desc=Toggles sounds that will be played on the host computer when an incoming command is received by a remote node
gate.conf=Gate Configuration
gateAccessOn=Gate Access
gateAccessOn.desc=Gate Access. When disabled the gate will not open from any other means other than from the host application.
gate.toggle=Open/Close Gate
gate.toggle.desc=Opens the gate when closed. Closes the gate when open. (Note: When gate access is turned off gate toggle will only work when initiated from the host application)
gate.toggle.failed=Failed to open/close gate
cam.take.qvga=Takes a QVGA image at the current camera pan/tilt angle and transfers the image back to the host. An email with the attached image will also be sent when enabled.
cam.take.vga=Takes a VGA image at the current camera pan/tilt angle and transfers the image back to the host. An email with the attached image will also be sent when enabled.
settings.send=Sends the settings to the remote microcontroller node. Blinks when settings updates have been made locally, but have not yet been sent.
settings.save=Saves the current host and remote node(s) to the database (will also synchronize/send the remote node values with the remote XBee device when the auto synchronization flag on the remote node setting is set to true).
settings.save.failed=Unable to save settings for remote node with address %1$s (see log for more details).
settings.receive=Gets the settings from the remote microcontroller node.
sensors.readings.get=Request Readings From Remote Device
sensors.readings.get.desc=Requests the current sensor readings and updates the readings display with the returned values (provided the remote device responds to the request).
sensors.readings=Readings
sensors.readings.last=Last Captured Reading
sensors.readings.failed=Unable to get the sensor readings from node address %1$s. See log for more details.
settings.send.failed=Unable to send the settings to remote node address %1$s. See log for more details.
help.text.default=Right-Click on any control or control label for help
mail.connect.failed=Unable to connect to email using SMTP host: %1$s, SMTP port: %2$s, IMAP host: %3$s, IMAP port: %4$s Username: %5$s, Folder: %6$s.
mail.connect=Connect To Email
mail.connect.desc=Establishes an email connection. Email connectivity performs two functions. It listens to incoming emails from any of authorized recipients that contains commands and executes them in the order they are entered in the subject and/or body of the email. It also uses the same authorized recipients to send alarm trip notifications (with images) when that feature is turned on.
mail.connected=Connected To Email
mail.connecting=Connecting To Email...
mail.disconnecting=Disconnecting From Email...
mail.disconnected=Disconnected From Email
mail.closed=Closed Email Connection
mail.auth.failed=Failed to authenticate email account using the provided credentials
mail.reconnect=Reconnect To Email
mail.smtp.host=SMTP Host
mail.smtp.host.desc=Outgoing email host
mail.smtp.port=SMTP Port
mail.smtp.port.desc=Outgoing email port
mail.imap.host=IMAP Host
mail.imap.host.desc=Incoming email host
mail.imap.port=IMAP Port
mail.imap.port.desc=Incoming email port
mail.username=Username
mail.username.desc=Username of email account
mail.password=Password
mail.password.desc=Password to email account
mail.folder=Inbox Folder Name
mail.folder.desc=The name of the inbox folder where incoming messages will be listened to for commands
sonar.threshold=Sonar Threshold Range (%1$s)
sonar.threshold.desc=Sonar Distance Threshold Range (%1$s): Distance at which an alarm will be triggered and an image sent to the host computer/recipients (if email option is turned on).
sonarFeet=Sonar Feet
sonarInches=Sonar Inches
sonarDistanceThresFeet=Sonar Threshold (feet portion)
sonarDistanceThresInches=Sonar Threshold (inches portion)
sonarDelayBtwnTrips=Sonar Delay (minutes)
sonarDelayBtwnTrips.desc=Sonar Delay: Delay in minutes between alarm triggers when an object is within the distance threshold.\n When zero, there may still be a few seconds between photos due to the wireless transfer rate.
pirIntensity=PIR Intensity
pirDelayBtwnTrips=PIR Delay (minutes)
pirDelayBtwnTrips.desc=PIR Delay: Delay in minutes between alarm triggers when an object is within the distance threshold.\n When zero, there may still be a few seconds between photos due to the wireless transfer rate.
microwaveCycleCount=Microwave Cycles/Second
mwSpeedThresCyclesPerSec=Microwave Threshold (cycles/sec)
mwSpeedThresCyclesPerSec.desc=Microwave Speed Threshold: Cycles/Second at which an alarm will be triggered and sent to the host computer/recipients (if email option is turned on).
mwDelayBtwnTrips=Microwave Delay (minutes)
mwDelayBtwnTrips.desc=Microwave Delay: Delay in minutes between alarm triggers when an object is within the speed threshold.\n When zero, there may still be a few seconds between photos due to the wireless transfer rate.
laser.threshold=Laser Threshold (%1$s)
laser.threshold.desc=Laser Distance Threshold (%1$s): Distance at which an alarm will be triggered and an image sent to the host computer/recipients (if email option is turned on).
laserFeet=Laser Feet
laserInches=Laser Inches
laserDistanceThresFeet=Laser Threshold (feet portion)
laserDistanceThresInches=Laser Threshold (inches portion)
laserDelayBtwnTrips=Laser Delay (minutes)
laserDelayBtwnTrips.desc=Laser Delay: Delay in minutes between alarm triggers when an object is within the distance threshold.\n When zero, there may still be a few seconds between photos due to the wireless transfer rate.
laserCalibratedAnglePan=Laser Calibration Pan
laserCalibratedAngleTilt=Laser Calibration Tilt
laser.calibration=Calibrate Laser Position
laser.calibration.desc=Calibrate Laser Position: Attempts to calibrate the Laser/IR Receiver by scanning through all available pan/tilt angles until it finds the return signal from the pulsed laser or until it exhausts all available pan/tilt angles. Prior to calibration the reflective mirror should be aligned in the general direction of the Laser/IR Receiver.
laser.calibration.success=Laser calibration was successful
laser.calibration.failed=Laser calibration failed! Check the reflective mirror position and ensure that it is aligned in the general direction of the receiver.
gateState=Gate State (open/close)
fromMultiState=From Multi-Alarm Trip State
signalStrength=Signal Strength
readDate=Read Date/Time
graph.axis.x=Time
graph.axis.y=Severity
graph.series.alarm.laser=Laser Alarm Trips
graph.series.alarm.sonar=Sonar Alarm Trips
graph.series.alarm.microwave=Microwave Alarm Trips
graph.series.alarm.pir=PIR Alarm Trips
graph.series.activity.reads=Sensor Reads
wireless.web.host=WAN Secure Web Host
wireless.web.host.desc=Web host that will be used by the web server for internet access (i.e. https://example.com where example.com is the host)
wireless.web.port=WAN Secure Web Port
wireless.web.port.desc=Web port that will be used by the web server for internet access (i.e. https://example.com:8080 where 8080 is the port)
wireless.web.host.local=LAN Web Host
wireless.web.host.local.desc=Web host that will be used by the web server for local LAN access (i.e. https://example.com where example.com is the host)
wireless.web.port.local=LAN Web Port
wireless.web.port.local.desc=Web port that will be used by the web server for local LAN access (i.e. http://example.com:8080 where 8080 is the port)
wireless.web.startstop=Start/Stop Web Server
wireless.web.startstop.desc=Starts/Stops a web server that will allow secure access to this application. There are two type of connections that can be established. One is for LAN access that does not require a secure connection and another for WAN access via the internet that does require a secure connection. When accessing the web console via the same machine that the UGate host console is running will result in automatic authentication using the same credentials as the console user. Any other machine via LAN or WAN will prompt the user to authenticate before processing any requests. Web credentials use the same authentication methodology as the desktop console.
wireless.web.commands=Commands
wireless.web.command.execute=Execute Command %1$s
wireless.node.remote.node=Remote Node: %1$s
wireless.node.remote=Remote XBee Hexadecimal Address
wireless.node.remote.prompt=Remote XBee Hexadecimal Address
wireless.node.remote.status=Remote XBee at address %1$s. Last received command: "%2$s". Click to select. Status will blink when incoming data is received from the remote node.
wireless.node.remote.desc=Remote XBee Node: The address to a remote XBee that manages communication for a remote sensor cluster.
wireless.node.remote.changing=The remote XBee node selection has been changed from %1$s to %2$s.
wireless.node.remote.remove=Are you sure that you want to permanently remove remote XBee node %1$s (cannot be undone)?
wireless.node.remote.remove.desc=Removes the currently selected remote XBee node.
wireless.node.remote.remove.failed=Unable to remove %1$s. See log for more details.
wireless.node.remote.add=The remote XBee node %2$s has been added. The previous node was %1$s.
wireless.node.remote.add.desc=Adds the remote XBee node using the entered address.
wireless.node.remote.add.failed=Unable to add %1$s. See log for more details.
wireless.node.remote.select.failed=Unable to select remote XBee node %1$s because it cannot be found
wireless.node.remote.local.saved=The settings for the remote XBee node %1$s has been saved on the local machine, but not yet sent to the remote XBee device.
deviceAutoSynchronize=Auto Synchronize
deviceAutoSynchronize.desc=Setting, when true, will automatically synchronized/set values on the remote device node each time the remote node values are updated locally.
wireless.node.connect=Test Connection To Remote Node
wireless.node.connect.failed=Remote Node at address %1$s did not respond to a connection request
wireless.node.remote.syncd=The remote XBee node %1$s local values have been sent to the remote device. This setting can be either automatically or manually set each time a change is detected. See the auto synchronization flag on the remote node setting.
wireless.node.remote.outofsync=The remote XBee node %1$s has different values than what exist locally and should be sent to the remote device. This can be automatically set each time a change is detected by setting the auto synchronization flag on the remote node setting.
wireless.node.remote.readings.time=Last captured date/time readings that were captured for the selected remote node
wireless.node.remote.readings.sensor=Last captured reading for the selected remote node
wireless.node.remote.readings.report=Automatic retrieval/reporting of sensor readings as they occur on the selected remote node (regardless if the alarm was triggered or not). NOTE: This may cause an enormous amount of network traffic and may influence the timing accuracy of alarm triggers. Therefore, it should only be used to debug alarm threshold settings.
wireless.workingdir=Media Capture Directory
wireless.workingdir.desc=Media Capture Directory: The path of the directory where images and other data will be stored for the remote XBee node. If the path does NOT start with '/' it will be assumed that the data directory will reside within the install directory. \
	A sub-directory will be created with the index of the node as its name. Typically, you'll want this directory to be the same for all remote nodes.  
wireless.host=Host XBee Hexadecimal Address
wireless.host.prompt=Host XBee Hexadecimal Address
wireless.host.desc=Host XBee Hexadecimal Address: The address that will be used to connect to the XBee connected to the machine where the GUI service is running.
wireless.port=Serial Port
wireless.port.desc=Serial Port: The serial port that the host XBee is connected to
wireless.speed=Baud Rate
wireless.speed.desc=Baud Rate: The baud rate that the host XBee will be connected at
wireless.access.key=Key %1$s
wireless.access.key.desc=Digit %1$s of the universal remote access code. When entered in consecutive combination with the other access codes it will enable the use of a universal remote control to operate the remote device where it was entered.
wireless.connect=Connect To Host XBee
wireless.connect.desc=Connects to the host XBee that is connected to this machine via a USB connection. The host XBee will be used to wirelessly transmit data to and from all remote devices/nodes on the network. 
wireless.connecting=Connecting To Host XBee...
wireless.reconnect=Reconnect To Host XBee
wireless.disconnecting=Disconnecting From Host XBee...
wireless.synchronizing=Synchronizing Remote XBees...
displayshelf.fullsize.tooltip=View Original Image Size
toggleswitch.on=ON
toggleswitch.off=OFF
service.tx.response.unrecognized=Unused response received of type %1$s. Incoming raw bytes: %2$s.
service.tx.response.success=Received transmission success notification: %1$s. Status: %2$s.
service.tx.response.error=A transmission error was detected for incoming raw bytes: %1$s. Cause: %2$s.
service.rx.readings=Sensor reading successfully received: %1$s.
service.rx.settings=Settings successfully received: %1$s.
service.rx.keycodes=Key codes successfully received: %1$s.
service.rx.image.multipart=Receiving multipart chunked image data (partial image: %1$s)...
service.rx.image.success=Captured image complete: %1$s.
service.rx.image.lostpackets.retry=Some of the packets were lost while capturing an image (partial image: %1$s)... Retrying (%2$s of %3$s).
service.rx.image.lostpackets=Some of the packets were lost while capturing an image (partial image: %1$s)... Failed after %2$s retry attempts.
service.rx.image.timeout=Last image capture timed out while receiving image data (partial image: %1$s)... Starting new image capture.
service.command.failed=An error occurred while executing command. See log for more details.
service.wireless.connection.required=Wireless connection must be established before initiating this service
service.wireless.failed=Unable to establish wireless connection. See log for more details.
service.wireless.web.failed=Unable to start web server. See log for more details.
service.wireless.ack.success=Wireless data %1$s successfully sent to address %2$s. Status: %3$s.
service.wireless.sending=Sending %1$s to wireless address %2$s.
service.wireless.success=Succeeded to send data to %1$s wireless node(s).
service.wireless.ack.failed=Packet data %1$s was not delivered to %2$s. Status: %3$s.
service.wireless.tx.timeout=Wireless transfer failed. No response from %1$s was received in the allotted time.
service.wireless.tx.failed=Unexpected error occurred during wireless transfer of data to %1$s.
service.wireless.tx.batch.failed=Wireless transfer failed on %1$s address(es).
service.wireless.settings.failed=Failed to send settings to node %1$s.
service.email.failed=Unable to establish email connection. See log for more details.
service.email.commandexec=Executed the %1$s command from email %2$s for remote node device %3$s.
service.email.commandexec.failed=Unable to execute command(s) %1$s from email %2$s for remote node device %3$s. Cause: %4$s. See log for more details.
win.systray.tooltip=UGate
win.close.desc=Close this window to exit the application
win.systray.minimize.info=The UGate application console has been closed, but all underlying services will remain running. Click the UGate System Tray icon to restore the console.